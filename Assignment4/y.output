Terminals unused in grammar

   STRUCT
   TYPEDEF
   UNION
   SINGLE_LINE_COMMENT
   MULTI_LINE_COMMENT
   DIGIT
   IDENTIFIER_NONDIGIT
   NONZERO_DIGIT
   NONZERO_INTEGER_CONSTANT
   CONSTANT
   DIGIT_SEQUENCE
   SIGN
   EXPONENT_PART
   FRACTIONAL_CONSTANT
   ESCAPE_SEQUENCE
   C_CHAR
   C_CHAR_SEQUENCE
   S_CHAR
   S_CHAR_SEQUENCE
   HASH
   THEN


State 190 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | STRING_LITERAL
    4                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    5 argument_expression_list_opt: argument_expression_list
    6                             | %empty

    7 argument_expression_list: assignment_expression
    8                         | argument_expression_list COMMA assignment_expression

    9 unary_operator: AMP
   10               | MUL
   11               | ADD
   12               | SUB
   13               | NEG
   14               | EXCLAIM

   15 multiplicative_expression: cast_expression
   16                          | multiplicative_expression MUL cast_expression
   17                          | multiplicative_expression DIV cast_expression
   18                          | multiplicative_expression MODULO cast_expression

   19 shift_expression: additive_expression
   20                 | shift_expression SHL additive_expression
   21                 | shift_expression SHR additive_expression

   22 equality_expression: relational_expression
   23                    | equality_expression EQ relational_expression
   24                    | equality_expression NEQ relational_expression

   25 exclusive_OR_expression: AND_expression
   26                        | exclusive_OR_expression BITXOR AND_expression

   27 logical_AND_expression: inclusive_OR_expression
   28                       | logical_AND_expression AND inclusive_OR_expression

   29 conditional_expression: logical_OR_expression
   30                       | logical_OR_expression QUESTION expression COLON conditional_expression

   31 assignment_operator: ASSIGN
   32                    | STAREQ
   33                    | DIVEQ
   34                    | MODEQ
   35                    | PLUSEQ
   36                    | MINUSEQ
   37                    | SHLEQ
   38                    | SHREQ
   39                    | BINANDEQ
   40                    | BINXOREQ
   41                    | BINOREQ

   42 constant_expression: conditional_expression

   43 init_declarator_list_opt: init_declarator_list
   44                         | %empty

   45 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   46                       | type_specifier declaration_specifiers_opt
   47                       | type_qualifier declaration_specifiers_opt
   48                       | function_specifier declaration_specifiers_opt

   49 init_declarator: declarator
   50                | declarator ASSIGN initializer

   51 type_specifier: VOID
   52               | CHAR
   53               | SHORT
   54               | INT
   55               | LONG
   56               | FLOAT
   57               | DOUBLE
   58               | SIGNED
   59               | UNSIGNED
   60               | _BOOL
   61               | _COMPLEX
   62               | _IMAGINARY
   63               | enum_specifier

   64 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
   65                         | type_qualifier specifier_qualifier_list_opt

   66 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
   67               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
   68               | ENUM IDENTIFIER

   69 enumerator: IDENTIFIER
   70           | IDENTIFIER ASSIGN constant_expression

   71 function_specifier: INLINE

   72 declarator: pointer_opt direct_declarator

   73 assignment_expression_opt: assignment_expression
   74                          | %empty

   75 pointer: MUL type_qualifier_list_opt
   76        | MUL type_qualifier_list_opt pointer

   77 parameter_type_list: parameter_list
   78                    | parameter_list COMMA DOTS

   79 parameter_declaration: declaration_specifiers declarator
   80                      | declaration_specifiers

   81 type_name: specifier_qualifier_list

   82 designation_opt: designation
   83                | %empty

   84 designation: designator_list ASSIGN

   85 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
   86           | DOT IDENTIFIER

   87 labeled_statement: IDENTIFIER COLON statement
   88                  | CASE constant_expression COLON statement
   89                  | DEFAULT COLON statement

   90 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

   91 block_item: declaration
   92           | statement

   93 expression_statement: expression_opt SEMICOLON

   94 selection_statement: selection_statement_base
   95                    | selection_statement_base ELSE statement
   96                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

   97 jump_statement: GOTO IDENTIFIER SEMICOLON
   98               | CONTINUE SEMICOLON
   99               | BREAK SEMICOLON
  100               | RETURN expression_opt SEMICOLON

  101 external_declaration: function_definition
  102                     | declaration

  103 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  104 declaration_list: declaration
  105                 | declaration_list declaration

  106 declaration_list_opt: declaration_list
  107                     | %empty

  108 translation_unit: external_declaration
  109                 | translation_unit external_declaration

  110 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  111                    | DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  112                    | FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  113                    | FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

  114 selection_statement_base: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  115 expression_opt: expression
  116               | %empty

  117 block_item_list: block_item
  118                | block_item_list block_item

  119 block_item_list_opt: block_item_list
  120                    | %empty

  121 statement: labeled_statement
  122          | compound_statement
  123          | expression_statement
  124          | selection_statement
  125          | iteration_statement
  126          | jump_statement

  127 designator_list: designator
  128                | designator_list designator

  129 initializer_list: designation_opt initializer
  130                 | initializer_list COMMA designation_opt initializer

  131 initializer: assignment_expression
  132            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  133            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  134 identifier_list: IDENTIFIER
  135                | identifier_list COMMA IDENTIFIER

  136 parameter_list: parameter_declaration
  137               | parameter_list COMMA parameter_declaration

  138 type_qualifier_list: type_qualifier
  139                    | type_qualifier_list type_qualifier

  140 direct_declarator: IDENTIFIER
  141                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  142                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  143                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE
  145                  | direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  146                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  147                  | direct_declarator ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE

  148 type_qualifier_list_opt: type_qualifier_list
  149                        | %empty

  150 pointer_opt: pointer
  151            | %empty

  152 type_qualifier: CONST
  153               | RESTRICT
  154               | VOLATILE

  155 enumerator_list: enumerator
  156                | enumerator_list COMMA enumerator

  157 identifier_opt: IDENTIFIER
  158               | %empty

  159 specifier_qualifier_list_opt: specifier_qualifier_list
  160                             | %empty

  161 storage_class_specifier: EXTERN
  162                        | STATIC
  163                        | AUTO
  164                        | REGISTER

  165 init_declarator_list: init_declarator
  166                     | init_declarator_list COMMA init_declarator

  167 declaration_specifiers_opt: declaration_specifiers
  168                           | %empty

  169 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

  170 expression: assignment_expression
  171           | expression COMMA assignment_expression

  172 assignment_expression: conditional_expression
  173                      | unary_expression assignment_operator assignment_expression

  174 logical_OR_expression: logical_AND_expression
  175                      | logical_OR_expression OR logical_AND_expression

  176 inclusive_OR_expression: exclusive_OR_expression
  177                        | inclusive_OR_expression BITOR exclusive_OR_expression

  178 AND_expression: equality_expression
  179               | AND_expression AMP equality_expression

  180 relational_expression: shift_expression
  181                      | relational_expression BITSHL shift_expression
  182                      | relational_expression BITSHR shift_expression
  183                      | relational_expression LTE shift_expression
  184                      | relational_expression GTE shift_expression

  185 additive_expression: multiplicative_expression
  186                    | additive_expression ADD multiplicative_expression
  187                    | additive_expression SUB multiplicative_expression

  188 cast_expression: unary_expression
  189                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

  190 unary_expression: postfix_expression
  191                 | INC unary_expression
  192                 | DEC unary_expression
  193                 | unary_operator cast_expression
  194                 | SIZEOF unary_expression
  195                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

  196 postfix_expression: primary_expression
  197                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
  198                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
  199                   | postfix_expression DOT IDENTIFIER
  200                   | postfix_expression ACC IDENTIFIER
  201                   | postfix_expression INC
  202                   | postfix_expression DEC
  203                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  205 constant: INTEGER_CONSTANT
  206         | FLOATING_CONSTANT
  207         | ENUMERATION_CONSTANT
  208         | CHARACTER_CONSTANT


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258) 163
ENUM (259) 66 67 68
RESTRICT (260) 153
UNSIGNED (261) 59
BREAK (262) 99
EXTERN (263) 161
RETURN (264) 100
VOID (265) 51
CASE (266) 88
FLOAT (267) 56
SHORT (268) 53
VOLATILE (269) 154
CHAR (270) 52
FOR (271) 112 113
SIGNED (272) 58
WHILE (273) 110 111
CONST (274) 152
GOTO (275) 97
SIZEOF (276) 194 195
_BOOL (277) 60
CONTINUE (278) 98
IF (279) 114
STATIC (280) 143 162
_COMPLEX (281) 61
DEFAULT (282) 89
INLINE (283) 71
STRUCT (284)
_IMAGINARY (285) 62
DO (286) 111
INT (287) 54
SWITCH (288) 96
DOUBLE (289) 57
LONG (290) 55
TYPEDEF (291)
ELSE (292) 95
REGISTER (293) 164
UNION (294)
SINGLE_LINE_COMMENT (295)
MULTI_LINE_COMMENT (296)
DIGIT (297)
IDENTIFIER_NONDIGIT (298)
IDENTIFIER (299) 1 68 69 70 86 87 97 134 135 140 157 199 200
NONZERO_DIGIT (300)
NONZERO_INTEGER_CONSTANT (301)
INTEGER_CONSTANT (302) 205
CONSTANT (303)
DIGIT_SEQUENCE (304)
SIGN (305)
EXPONENT_PART (306)
FRACTIONAL_CONSTANT (307)
FLOATING_CONSTANT (308) 206
ENUMERATION_CONSTANT (309) 207
ESCAPE_SEQUENCE (310)
C_CHAR (311)
C_CHAR_SEQUENCE (312)
CHARACTER_CONSTANT (313) 208
S_CHAR (314)
S_CHAR_SEQUENCE (315)
STRING_LITERAL (316) 3
SQUARE_BRACKET_OPEN (317) 85 142 143 144 197
SQUARE_BRACKET_CLOSE (318) 85 142 143 144 197
ROUND_BRACKET_OPEN (319) 4 96 110 111 112 113 114 141 145 146 147 189
    195 198 203 204
ROUND_BRACKET_CLOSE (320) 4 96 110 111 112 113 114 141 145 146 147
    189 195 198 203 204
CURLY_BRACKET_OPEN (321) 66 67 90 132 133 203 204
CURLY_BRACKET_CLOSE (322) 66 67 90 132 133 203 204
DOT (323) 86 199
ACC (324) 200
INC (325) 191 201
DEC (326) 192 202
AMP (327) 9 179
MUL (328) 10 16 75 76 144
ADD (329) 11 186
SUB (330) 12 187
NEG (331) 13
EXCLAIM (332) 14
DIV (333) 17
MODULO (334) 18
SHL (335) 20
SHR (336) 21
BITSHL (337) 181
BITSHR (338) 182
LTE (339) 183
GTE (340) 184
EQ (341) 23
NEQ (342) 24
AND (343) 28
OR (344) 175
QUESTION (345) 30
COLON (346) 30 87 88 89
SEMICOLON (347) 93 97 98 99 100 111 112 113 169
DOTS (348) 78
ASSIGN (349) 31 50 70 84
STAREQ (350) 32
DIVEQ (351) 33
MODEQ (352) 34
PLUSEQ (353) 35
MINUSEQ (354) 36
SHLEQ (355) 37
SHREQ (356) 38
BINANDEQ (357) 39
BINXOREQ (358) 40
BINOREQ (359) 41
COMMA (360) 8 67 78 130 133 135 137 156 166 171 204
HASH (361)
BITXOR (362) 26
BITOR (363) 177
THEN (364)


Nonterminals, with rules where they appear

$accept (110)
    on left: 0
primary_expression (111)
    on left: 1 2 3 4, on right: 196
argument_expression_list_opt (112)
    on left: 5 6, on right: 198
argument_expression_list (113)
    on left: 7 8, on right: 5 8
unary_operator (114)
    on left: 9 10 11 12 13 14, on right: 193
multiplicative_expression (115)
    on left: 15 16 17 18, on right: 16 17 18 185 186 187
shift_expression (116)
    on left: 19 20 21, on right: 20 21 180 181 182 183 184
equality_expression (117)
    on left: 22 23 24, on right: 23 24 178 179
exclusive_OR_expression (118)
    on left: 25 26, on right: 26 176 177
logical_AND_expression (119)
    on left: 27 28, on right: 28 174 175
conditional_expression (120)
    on left: 29 30, on right: 30 42 172
assignment_operator (121)
    on left: 31 32 33 34 35 36 37 38 39 40 41, on right: 173
constant_expression (122)
    on left: 42, on right: 70 85 88
init_declarator_list_opt (123)
    on left: 43 44, on right: 169
declaration_specifiers (124)
    on left: 45 46 47 48, on right: 79 80 103 167 169
init_declarator (125)
    on left: 49 50, on right: 165 166
type_specifier (126)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63, on right: 46 64
specifier_qualifier_list (127)
    on left: 64 65, on right: 81 159
enum_specifier (128)
    on left: 66 67 68, on right: 63
enumerator (129)
    on left: 69 70, on right: 155 156
function_specifier (130)
    on left: 71, on right: 48
declarator (131)
    on left: 72, on right: 49 50 79 103 141
assignment_expression_opt (132)
    on left: 73 74, on right: 142
pointer (133)
    on left: 75 76, on right: 76 150
parameter_type_list (134)
    on left: 77 78, on right: 145
parameter_declaration (135)
    on left: 79 80, on right: 136 137
type_name (136)
    on left: 81, on right: 189 195 203 204
designation_opt (137)
    on left: 82 83, on right: 129 130
designation (138)
    on left: 84, on right: 82
designator (139)
    on left: 85 86, on right: 127 128
labeled_statement (140)
    on left: 87 88 89, on right: 121
compound_statement (141)
    on left: 90, on right: 103 122
block_item (142)
    on left: 91 92, on right: 117 118
expression_statement (143)
    on left: 93, on right: 123
selection_statement (144)
    on left: 94 95 96, on right: 124
jump_statement (145)
    on left: 97 98 99 100, on right: 126
external_declaration (146)
    on left: 101 102, on right: 108 109
function_definition (147)
    on left: 103, on right: 101
declaration_list (148)
    on left: 104 105, on right: 105 106
declaration_list_opt (149)
    on left: 106 107, on right: 103
translation_unit (150)
    on left: 108 109, on right: 0 109
iteration_statement (151)
    on left: 110 111 112 113, on right: 125
selection_statement_base (152)
    on left: 114, on right: 94 95
expression_opt (153)
    on left: 115 116, on right: 93 100 112 113
block_item_list (154)
    on left: 117 118, on right: 118 119
block_item_list_opt (155)
    on left: 119 120, on right: 90
statement (156)
    on left: 121 122 123 124 125 126, on right: 87 88 89 92 95 96 110
    111 112 113 114
designator_list (157)
    on left: 127 128, on right: 84 128
initializer_list (158)
    on left: 129 130, on right: 130 132 133 203 204
initializer (159)
    on left: 131 132 133, on right: 50 129 130
identifier_list (160)
    on left: 134 135, on right: 135 146
parameter_list (161)
    on left: 136 137, on right: 77 78 137
type_qualifier_list (162)
    on left: 138 139, on right: 139 148
direct_declarator (163)
    on left: 140 141 142 143 144 145 146 147, on right: 72 142 143
    144 145 146 147
type_qualifier_list_opt (164)
    on left: 148 149, on right: 75 76 142 143 144
pointer_opt (165)
    on left: 150 151, on right: 72
type_qualifier (166)
    on left: 152 153 154, on right: 47 65 138 139
enumerator_list (167)
    on left: 155 156, on right: 66 67 156
identifier_opt (168)
    on left: 157 158, on right: 66 67
specifier_qualifier_list_opt (169)
    on left: 159 160, on right: 64 65
storage_class_specifier (170)
    on left: 161 162 163 164, on right: 45
init_declarator_list (171)
    on left: 165 166, on right: 43 166
declaration_specifiers_opt (172)
    on left: 167 168, on right: 45 46 47 48
declaration (173)
    on left: 169, on right: 91 102 104 105 113
expression (174)
    on left: 170 171, on right: 4 30 96 110 111 114 115 171 197
assignment_expression (175)
    on left: 172 173, on right: 7 8 73 131 143 170 171 173
logical_OR_expression (176)
    on left: 174 175, on right: 29 30 175
inclusive_OR_expression (177)
    on left: 176 177, on right: 27 28 177
AND_expression (178)
    on left: 178 179, on right: 25 26 179
relational_expression (179)
    on left: 180 181 182 183 184, on right: 22 23 24 181 182 183 184
additive_expression (180)
    on left: 185 186 187, on right: 19 20 21 186 187
cast_expression (181)
    on left: 188 189, on right: 15 16 17 18 189 193
unary_expression (182)
    on left: 190 191 192 193 194 195, on right: 173 188 191 192 194
postfix_expression (183)
    on left: 196 197 198 199 200 201 202 203 204, on right: 190 197
    198 199 200 201 202
constant (184)
    on left: 205 206 207 208, on right: 2


State 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    declaration_specifiers   go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    external_declaration     go to state 26
    function_definition      go to state 27
    translation_unit         go to state 28
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30
    declaration              go to state 31


State 1

  163 storage_class_specifier: AUTO .

    $default  reduce using rule 163 (storage_class_specifier)


State 2

   66 enum_specifier: ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
   67               | ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
   68               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 158 (identifier_opt)

    identifier_opt  go to state 33


State 3

  153 type_qualifier: RESTRICT .

    $default  reduce using rule 153 (type_qualifier)


State 4

   59 type_specifier: UNSIGNED .

    $default  reduce using rule 59 (type_specifier)


State 5

  161 storage_class_specifier: EXTERN .

    $default  reduce using rule 161 (storage_class_specifier)


State 6

   51 type_specifier: VOID .

    $default  reduce using rule 51 (type_specifier)


State 7

   56 type_specifier: FLOAT .

    $default  reduce using rule 56 (type_specifier)


State 8

   53 type_specifier: SHORT .

    $default  reduce using rule 53 (type_specifier)


State 9

  154 type_qualifier: VOLATILE .

    $default  reduce using rule 154 (type_qualifier)


State 10

   52 type_specifier: CHAR .

    $default  reduce using rule 52 (type_specifier)


State 11

   58 type_specifier: SIGNED .

    $default  reduce using rule 58 (type_specifier)


State 12

  152 type_qualifier: CONST .

    $default  reduce using rule 152 (type_qualifier)


State 13

   60 type_specifier: _BOOL .

    $default  reduce using rule 60 (type_specifier)


State 14

  162 storage_class_specifier: STATIC .

    $default  reduce using rule 162 (storage_class_specifier)


State 15

   61 type_specifier: _COMPLEX .

    $default  reduce using rule 61 (type_specifier)


State 16

   71 function_specifier: INLINE .

    $default  reduce using rule 71 (function_specifier)


State 17

   62 type_specifier: _IMAGINARY .

    $default  reduce using rule 62 (type_specifier)


State 18

   54 type_specifier: INT .

    $default  reduce using rule 54 (type_specifier)


State 19

   57 type_specifier: DOUBLE .

    $default  reduce using rule 57 (type_specifier)


State 20

   55 type_specifier: LONG .

    $default  reduce using rule 55 (type_specifier)


State 21

  164 storage_class_specifier: REGISTER .

    $default  reduce using rule 164 (storage_class_specifier)


State 22

  103 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement
  169 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    MUL  shift, and go to state 34

    SEMICOLON  reduce using rule 44 (init_declarator_list_opt)
    $default   reduce using rule 151 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator           go to state 36
    declarator                go to state 37
    pointer                   go to state 38
    pointer_opt               go to state 39
    init_declarator_list      go to state 40


State 23

   46 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    $default  reduce using rule 168 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    type_specifier              go to state 23
    enum_specifier              go to state 24
    function_specifier          go to state 25
    type_qualifier              go to state 29
    storage_class_specifier     go to state 30
    declaration_specifiers_opt  go to state 42


State 24

   63 type_specifier: enum_specifier .

    $default  reduce using rule 63 (type_specifier)


State 25

   48 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    $default  reduce using rule 168 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    type_specifier              go to state 23
    enum_specifier              go to state 24
    function_specifier          go to state 25
    type_qualifier              go to state 29
    storage_class_specifier     go to state 30
    declaration_specifiers_opt  go to state 43


State 26

  108 translation_unit: external_declaration .

    $default  reduce using rule 108 (translation_unit)


State 27

  101 external_declaration: function_definition .

    $default  reduce using rule 101 (external_declaration)


State 28

    0 $accept: translation_unit . $end
  109 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 44
    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    declaration_specifiers   go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    external_declaration     go to state 45
    function_definition      go to state 27
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30
    declaration              go to state 31


State 29

   47 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    $default  reduce using rule 168 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    type_specifier              go to state 23
    enum_specifier              go to state 24
    function_specifier          go to state 25
    type_qualifier              go to state 29
    storage_class_specifier     go to state 30
    declaration_specifiers_opt  go to state 46


State 30

   45 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    $default  reduce using rule 168 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    type_specifier              go to state 23
    enum_specifier              go to state 24
    function_specifier          go to state 25
    type_qualifier              go to state 29
    storage_class_specifier     go to state 30
    declaration_specifiers_opt  go to state 47


State 31

  102 external_declaration: declaration .

    $default  reduce using rule 102 (external_declaration)


State 32

   68 enum_specifier: ENUM IDENTIFIER .
  157 identifier_opt: IDENTIFIER .

    CURLY_BRACKET_OPEN  reduce using rule 157 (identifier_opt)
    $default            reduce using rule 68 (enum_specifier)


State 33

   66 enum_specifier: ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
   67               | ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 48


State 34

   75 pointer: MUL . type_qualifier_list_opt
   76        | MUL . type_qualifier_list_opt pointer

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier_list      go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier           go to state 51


State 35

  169 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 36

  165 init_declarator_list: init_declarator .

    $default  reduce using rule 165 (init_declarator_list)


State 37

   49 init_declarator: declarator .
   50                | declarator . ASSIGN initializer
  103 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21
    ASSIGN      shift, and go to state 53

    CURLY_BRACKET_OPEN  reduce using rule 107 (declaration_list_opt)
    $default            reduce using rule 49 (init_declarator)

    declaration_specifiers   go to state 54
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    declaration_list         go to state 55
    declaration_list_opt     go to state 56
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30
    declaration              go to state 57


State 38

  150 pointer_opt: pointer .

    $default  reduce using rule 150 (pointer_opt)


State 39

   72 declarator: pointer_opt . direct_declarator

    IDENTIFIER          shift, and go to state 58
    ROUND_BRACKET_OPEN  shift, and go to state 59

    direct_declarator  go to state 60


State 40

   43 init_declarator_list_opt: init_declarator_list .
  166 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 61

    $default  reduce using rule 43 (init_declarator_list_opt)


State 41

  167 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 167 (declaration_specifiers_opt)


State 42

   46 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 46 (declaration_specifiers)


State 43

   48 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 48 (declaration_specifiers)


State 44

    0 $accept: translation_unit $end .

    $default  accept


State 45

  109 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 109 (translation_unit)


State 46

   47 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 47 (declaration_specifiers)


State 47

   45 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 45 (declaration_specifiers)


State 48

   66 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list CURLY_BRACKET_CLOSE
   67               | ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 62

    enumerator       go to state 63
    enumerator_list  go to state 64


State 49

  139 type_qualifier_list: type_qualifier_list . type_qualifier
  148 type_qualifier_list_opt: type_qualifier_list .

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 148 (type_qualifier_list_opt)

    type_qualifier  go to state 65


State 50

   75 pointer: MUL type_qualifier_list_opt .
   76        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 34

    $default  reduce using rule 75 (pointer)

    pointer  go to state 66


State 51

  138 type_qualifier_list: type_qualifier .

    $default  reduce using rule 138 (type_qualifier_list)


State 52

  169 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 169 (declaration)


State 53

   50 init_declarator: declarator ASSIGN . initializer

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 75
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    initializer                go to state 92
    assignment_expression      go to state 93
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 54

  169 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    MUL  shift, and go to state 34

    SEMICOLON  reduce using rule 44 (init_declarator_list_opt)
    $default   reduce using rule 151 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator           go to state 36
    declarator                go to state 103
    pointer                   go to state 38
    pointer_opt               go to state 39
    init_declarator_list      go to state 40


State 55

  105 declaration_list: declaration_list . declaration
  106 declaration_list_opt: declaration_list .

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21

    $default  reduce using rule 106 (declaration_list_opt)

    declaration_specifiers   go to state 54
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30
    declaration              go to state 104


State 56

  103 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 105

    compound_statement  go to state 106


State 57

  104 declaration_list: declaration .

    $default  reduce using rule 104 (declaration_list)


State 58

  140 direct_declarator: IDENTIFIER .

    $default  reduce using rule 140 (direct_declarator)


State 59

  141 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    MUL  shift, and go to state 34

    $default  reduce using rule 151 (pointer_opt)

    declarator   go to state 107
    pointer      go to state 38
    pointer_opt  go to state 39


State 60

   72 declarator: pointer_opt direct_declarator .
  142 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  143                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE
  145                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  146                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  147                  | direct_declarator . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    ROUND_BRACKET_OPEN   shift, and go to state 109

    $default  reduce using rule 72 (declarator)


State 61

  166 init_declarator_list: init_declarator_list COMMA . init_declarator

    MUL  shift, and go to state 34

    $default  reduce using rule 151 (pointer_opt)

    init_declarator  go to state 110
    declarator       go to state 103
    pointer          go to state 38
    pointer_opt      go to state 39


State 62

   69 enumerator: IDENTIFIER .
   70           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 111

    $default  reduce using rule 69 (enumerator)


State 63

  155 enumerator_list: enumerator .

    $default  reduce using rule 155 (enumerator_list)


State 64

   66 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . CURLY_BRACKET_CLOSE
   67               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . COMMA CURLY_BRACKET_CLOSE
  156 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 112
    COMMA                shift, and go to state 113


State 65

  139 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 139 (type_qualifier_list)


State 66

   76 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 76 (pointer)


State 67

  194 unary_expression: SIZEOF . unary_expression
  195                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 114
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    unary_expression    go to state 115
    postfix_expression  go to state 101
    constant            go to state 102


State 68

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 69

  205 constant: INTEGER_CONSTANT .

    $default  reduce using rule 205 (constant)


State 70

  206 constant: FLOATING_CONSTANT .

    $default  reduce using rule 206 (constant)


State 71

  207 constant: ENUMERATION_CONSTANT .

    $default  reduce using rule 207 (constant)


State 72

  208 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 208 (constant)


State 73

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 74

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
  189 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression
  203 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    VOID                  shift, and go to state 6
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    SIGNED                shift, and go to state 11
    CONST                 shift, and go to state 12
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    _COMPLEX              shift, and go to state 15
    _IMAGINARY            shift, and go to state 17
    INT                   shift, and go to state 18
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 24
    type_name                  go to state 118
    type_qualifier             go to state 119
    expression                 go to state 120
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 75

  132 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  133            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 122
    DOT                  shift, and go to state 123

    $default  reduce using rule 83 (designation_opt)

    designation_opt   go to state 124
    designation       go to state 125
    designator        go to state 126
    designator_list   go to state 127
    initializer_list  go to state 128


State 76

  191 unary_expression: INC . unary_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 129
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    unary_expression    go to state 130
    postfix_expression  go to state 101
    constant            go to state 102


State 77

  192 unary_expression: DEC . unary_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 129
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    unary_expression    go to state 131
    postfix_expression  go to state 101
    constant            go to state 102


State 78

    9 unary_operator: AMP .

    $default  reduce using rule 9 (unary_operator)


State 79

   10 unary_operator: MUL .

    $default  reduce using rule 10 (unary_operator)


State 80

   11 unary_operator: ADD .

    $default  reduce using rule 11 (unary_operator)


State 81

   12 unary_operator: SUB .

    $default  reduce using rule 12 (unary_operator)


State 82

   13 unary_operator: NEG .

    $default  reduce using rule 13 (unary_operator)


State 83

   14 unary_operator: EXCLAIM .

    $default  reduce using rule 14 (unary_operator)


State 84

  196 postfix_expression: primary_expression .

    $default  reduce using rule 196 (postfix_expression)


State 85

  193 unary_expression: unary_operator . cast_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 132
    unary_expression    go to state 133
    postfix_expression  go to state 101
    constant            go to state 102


State 86

   16 multiplicative_expression: multiplicative_expression . MUL cast_expression
   17                          | multiplicative_expression . DIV cast_expression
   18                          | multiplicative_expression . MODULO cast_expression
  185 additive_expression: multiplicative_expression .

    MUL     shift, and go to state 134
    DIV     shift, and go to state 135
    MODULO  shift, and go to state 136

    $default  reduce using rule 185 (additive_expression)


State 87

   20 shift_expression: shift_expression . SHL additive_expression
   21                 | shift_expression . SHR additive_expression
  180 relational_expression: shift_expression .

    SHL  shift, and go to state 137
    SHR  shift, and go to state 138

    $default  reduce using rule 180 (relational_expression)


State 88

   23 equality_expression: equality_expression . EQ relational_expression
   24                    | equality_expression . NEQ relational_expression
  178 AND_expression: equality_expression .

    EQ   shift, and go to state 139
    NEQ  shift, and go to state 140

    $default  reduce using rule 178 (AND_expression)


State 89

   26 exclusive_OR_expression: exclusive_OR_expression . BITXOR AND_expression
  176 inclusive_OR_expression: exclusive_OR_expression .

    BITXOR  shift, and go to state 141

    $default  reduce using rule 176 (inclusive_OR_expression)


State 90

   28 logical_AND_expression: logical_AND_expression . AND inclusive_OR_expression
  174 logical_OR_expression: logical_AND_expression .

    AND  shift, and go to state 142

    $default  reduce using rule 174 (logical_OR_expression)


State 91

  172 assignment_expression: conditional_expression .

    $default  reduce using rule 172 (assignment_expression)


State 92

   50 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 50 (init_declarator)


State 93

  131 initializer: assignment_expression .

    $default  reduce using rule 131 (initializer)


State 94

   29 conditional_expression: logical_OR_expression .
   30                       | logical_OR_expression . QUESTION expression COLON conditional_expression
  175 logical_OR_expression: logical_OR_expression . OR logical_AND_expression

    OR        shift, and go to state 143
    QUESTION  shift, and go to state 144

    $default  reduce using rule 29 (conditional_expression)


State 95

   27 logical_AND_expression: inclusive_OR_expression .
  177 inclusive_OR_expression: inclusive_OR_expression . BITOR exclusive_OR_expression

    BITOR  shift, and go to state 145

    $default  reduce using rule 27 (logical_AND_expression)


State 96

   25 exclusive_OR_expression: AND_expression .
  179 AND_expression: AND_expression . AMP equality_expression

    AMP  shift, and go to state 146

    $default  reduce using rule 25 (exclusive_OR_expression)


State 97

   22 equality_expression: relational_expression .
  181 relational_expression: relational_expression . BITSHL shift_expression
  182                      | relational_expression . BITSHR shift_expression
  183                      | relational_expression . LTE shift_expression
  184                      | relational_expression . GTE shift_expression

    BITSHL  shift, and go to state 147
    BITSHR  shift, and go to state 148
    LTE     shift, and go to state 149
    GTE     shift, and go to state 150

    $default  reduce using rule 22 (equality_expression)


State 98

   19 shift_expression: additive_expression .
  186 additive_expression: additive_expression . ADD multiplicative_expression
  187                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 19 (shift_expression)


State 99

   15 multiplicative_expression: cast_expression .

    $default  reduce using rule 15 (multiplicative_expression)


State 100

  173 assignment_expression: unary_expression . assignment_operator assignment_expression
  188 cast_expression: unary_expression .

    ASSIGN    shift, and go to state 153
    STAREQ    shift, and go to state 154
    DIVEQ     shift, and go to state 155
    MODEQ     shift, and go to state 156
    PLUSEQ    shift, and go to state 157
    MINUSEQ   shift, and go to state 158
    SHLEQ     shift, and go to state 159
    SHREQ     shift, and go to state 160
    BINANDEQ  shift, and go to state 161
    BINXOREQ  shift, and go to state 162
    BINOREQ   shift, and go to state 163

    $default  reduce using rule 188 (cast_expression)

    assignment_operator  go to state 164


State 101

  190 unary_expression: postfix_expression .
  197 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
  198                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
  199                   | postfix_expression . DOT IDENTIFIER
  200                   | postfix_expression . ACC IDENTIFIER
  201                   | postfix_expression . INC
  202                   | postfix_expression . DEC

    SQUARE_BRACKET_OPEN  shift, and go to state 165
    ROUND_BRACKET_OPEN   shift, and go to state 166
    DOT                  shift, and go to state 167
    ACC                  shift, and go to state 168
    INC                  shift, and go to state 169
    DEC                  shift, and go to state 170

    $default  reduce using rule 190 (unary_expression)


State 102

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 103

   49 init_declarator: declarator .
   50                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 49 (init_declarator)


State 104

  105 declaration_list: declaration_list declaration .

    $default  reduce using rule 105 (declaration_list)


State 105

   90 compound_statement: CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                  shift, and go to state 1
    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    BREAK                 shift, and go to state 171
    EXTERN                shift, and go to state 5
    RETURN                shift, and go to state 172
    VOID                  shift, and go to state 6
    CASE                  shift, and go to state 173
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    FOR                   shift, and go to state 174
    SIGNED                shift, and go to state 11
    WHILE                 shift, and go to state 175
    CONST                 shift, and go to state 12
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    STATIC                shift, and go to state 14
    _COMPLEX              shift, and go to state 15
    DEFAULT               shift, and go to state 179
    INLINE                shift, and go to state 16
    _IMAGINARY            shift, and go to state 17
    DO                    shift, and go to state 180
    INT                   shift, and go to state 18
    SWITCH                shift, and go to state 181
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    REGISTER              shift, and go to state 21
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    CURLY_BRACKET_CLOSE  reduce using rule 120 (block_item_list_opt)
    $default             reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    declaration_specifiers     go to state 54
    type_specifier             go to state 23
    enum_specifier             go to state 24
    function_specifier         go to state 25
    labeled_statement          go to state 183
    compound_statement         go to state 184
    block_item                 go to state 185
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    block_item_list            go to state 192
    block_item_list_opt        go to state 193
    statement                  go to state 194
    type_qualifier             go to state 29
    storage_class_specifier    go to state 30
    declaration                go to state 195
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 106

  103 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 103 (function_definition)


State 107

  141 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 197


State 108

  142 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  143                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12
    STATIC    shift, and go to state 198

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier_list      go to state 49
    type_qualifier_list_opt  go to state 199
    type_qualifier           go to state 51


State 109

  145 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . parameter_type_list ROUND_BRACKET_CLOSE
  146                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list ROUND_BRACKET_CLOSE
  147                  | direct_declarator ROUND_BRACKET_OPEN . ROUND_BRACKET_CLOSE

    AUTO                 shift, and go to state 1
    ENUM                 shift, and go to state 2
    RESTRICT             shift, and go to state 3
    UNSIGNED             shift, and go to state 4
    EXTERN               shift, and go to state 5
    VOID                 shift, and go to state 6
    FLOAT                shift, and go to state 7
    SHORT                shift, and go to state 8
    VOLATILE             shift, and go to state 9
    CHAR                 shift, and go to state 10
    SIGNED               shift, and go to state 11
    CONST                shift, and go to state 12
    _BOOL                shift, and go to state 13
    STATIC               shift, and go to state 14
    _COMPLEX             shift, and go to state 15
    INLINE               shift, and go to state 16
    _IMAGINARY           shift, and go to state 17
    INT                  shift, and go to state 18
    DOUBLE               shift, and go to state 19
    LONG                 shift, and go to state 20
    REGISTER             shift, and go to state 21
    IDENTIFIER           shift, and go to state 200
    ROUND_BRACKET_CLOSE  shift, and go to state 201

    declaration_specifiers   go to state 202
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    parameter_type_list      go to state 203
    parameter_declaration    go to state 204
    identifier_list          go to state 205
    parameter_list           go to state 206
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30


State 110

  166 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 166 (init_declarator_list)


State 111

   70 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 207
    constant_expression        go to state 208
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 112

   66 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 66 (enum_specifier)


State 113

   67 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA . CURLY_BRACKET_CLOSE
  156 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER           shift, and go to state 62
    CURLY_BRACKET_CLOSE  shift, and go to state 209

    enumerator  go to state 210


State 114

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
  195 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE
  203 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    VOID                  shift, and go to state 6
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    SIGNED                shift, and go to state 11
    CONST                 shift, and go to state 12
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    _COMPLEX              shift, and go to state 15
    _IMAGINARY            shift, and go to state 17
    INT                   shift, and go to state 18
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 24
    type_name                  go to state 211
    type_qualifier             go to state 119
    expression                 go to state 120
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 115

  194 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 194 (unary_expression)


State 116

   64 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20

    $default  reduce using rule 160 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 212
    enum_specifier                go to state 24
    type_qualifier                go to state 119
    specifier_qualifier_list_opt  go to state 213


State 117

   81 type_name: specifier_qualifier_list .

    $default  reduce using rule 81 (type_name)


State 118

  189 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression
  203 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 214


State 119

   65 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20

    $default  reduce using rule 160 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 212
    enum_specifier                go to state 24
    type_qualifier                go to state 119
    specifier_qualifier_list_opt  go to state 215


State 120

    4 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
  171 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 216
    COMMA                shift, and go to state 217


State 121

  170 expression: assignment_expression .

    $default  reduce using rule 170 (expression)


State 122

   85 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 207
    constant_expression        go to state 218
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 123

   86 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 219


State 124

  129 initializer_list: designation_opt . initializer

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 75
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    initializer                go to state 220
    assignment_expression      go to state 93
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 125

   82 designation_opt: designation .

    $default  reduce using rule 82 (designation_opt)


State 126

  127 designator_list: designator .

    $default  reduce using rule 127 (designator_list)


State 127

   84 designation: designator_list . ASSIGN
  128 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 122
    DOT                  shift, and go to state 123
    ASSIGN               shift, and go to state 221

    designator  go to state 222


State 128

  130 initializer_list: initializer_list . COMMA designation_opt initializer
  132 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  133            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 223
    COMMA                shift, and go to state 224


State 129

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
  203 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    VOID                  shift, and go to state 6
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    SIGNED                shift, and go to state 11
    CONST                 shift, and go to state 12
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    _COMPLEX              shift, and go to state 15
    _IMAGINARY            shift, and go to state 17
    INT                   shift, and go to state 18
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 24
    type_name                  go to state 225
    type_qualifier             go to state 119
    expression                 go to state 120
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 130

  191 unary_expression: INC unary_expression .

    $default  reduce using rule 191 (unary_expression)


State 131

  192 unary_expression: DEC unary_expression .

    $default  reduce using rule 192 (unary_expression)


State 132

  193 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 193 (unary_expression)


State 133

  188 cast_expression: unary_expression .

    $default  reduce using rule 188 (cast_expression)


State 134

   16 multiplicative_expression: multiplicative_expression MUL . cast_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 226
    unary_expression    go to state 133
    postfix_expression  go to state 101
    constant            go to state 102


State 135

   17 multiplicative_expression: multiplicative_expression DIV . cast_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 227
    unary_expression    go to state 133
    postfix_expression  go to state 101
    constant            go to state 102


State 136

   18 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 228
    unary_expression    go to state 133
    postfix_expression  go to state 101
    constant            go to state 102


State 137

   20 shift_expression: shift_expression SHL . additive_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 229
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 138

   21 shift_expression: shift_expression SHR . additive_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 230
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 139

   23 equality_expression: equality_expression EQ . relational_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    relational_expression      go to state 231
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 140

   24 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    relational_expression      go to state 232
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 141

   26 exclusive_OR_expression: exclusive_OR_expression BITXOR . AND_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 233
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 142

   28 logical_AND_expression: logical_AND_expression AND . inclusive_OR_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    inclusive_OR_expression    go to state 234
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 143

  175 logical_OR_expression: logical_OR_expression OR . logical_AND_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 235
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 144

   30 conditional_expression: logical_OR_expression QUESTION . expression COLON conditional_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 236
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 145

  177 inclusive_OR_expression: inclusive_OR_expression BITOR . exclusive_OR_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 237
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 146

  179 AND_expression: AND_expression AMP . equality_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 238
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 147

  181 relational_expression: relational_expression BITSHL . shift_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 239
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 148

  182 relational_expression: relational_expression BITSHR . shift_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 240
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 149

  183 relational_expression: relational_expression LTE . shift_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 241
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 150

  184 relational_expression: relational_expression GTE . shift_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 242
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 151

  186 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 243
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 152

  187 additive_expression: additive_expression SUB . multiplicative_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 244
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 153

   31 assignment_operator: ASSIGN .

    $default  reduce using rule 31 (assignment_operator)


State 154

   32 assignment_operator: STAREQ .

    $default  reduce using rule 32 (assignment_operator)


State 155

   33 assignment_operator: DIVEQ .

    $default  reduce using rule 33 (assignment_operator)


State 156

   34 assignment_operator: MODEQ .

    $default  reduce using rule 34 (assignment_operator)


State 157

   35 assignment_operator: PLUSEQ .

    $default  reduce using rule 35 (assignment_operator)


State 158

   36 assignment_operator: MINUSEQ .

    $default  reduce using rule 36 (assignment_operator)


State 159

   37 assignment_operator: SHLEQ .

    $default  reduce using rule 37 (assignment_operator)


State 160

   38 assignment_operator: SHREQ .

    $default  reduce using rule 38 (assignment_operator)


State 161

   39 assignment_operator: BINANDEQ .

    $default  reduce using rule 39 (assignment_operator)


State 162

   40 assignment_operator: BINXOREQ .

    $default  reduce using rule 40 (assignment_operator)


State 163

   41 assignment_operator: BINOREQ .

    $default  reduce using rule 41 (assignment_operator)


State 164

  173 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    assignment_expression      go to state 245
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 165

  197 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 246
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 166

  198 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . argument_expression_list_opt ROUND_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 6 (argument_expression_list_opt)

    primary_expression            go to state 84
    argument_expression_list_opt  go to state 247
    argument_expression_list      go to state 248
    unary_operator                go to state 85
    multiplicative_expression     go to state 86
    shift_expression              go to state 87
    equality_expression           go to state 88
    exclusive_OR_expression       go to state 89
    logical_AND_expression        go to state 90
    conditional_expression        go to state 91
    assignment_expression         go to state 249
    logical_OR_expression         go to state 94
    inclusive_OR_expression       go to state 95
    AND_expression                go to state 96
    relational_expression         go to state 97
    additive_expression           go to state 98
    cast_expression               go to state 99
    unary_expression              go to state 100
    postfix_expression            go to state 101
    constant                      go to state 102


State 167

  199 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 250


State 168

  200 postfix_expression: postfix_expression ACC . IDENTIFIER

    IDENTIFIER  shift, and go to state 251


State 169

  201 postfix_expression: postfix_expression INC .

    $default  reduce using rule 201 (postfix_expression)


State 170

  202 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 202 (postfix_expression)


State 171

   99 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 252


State 172

  100 jump_statement: RETURN . expression_opt SEMICOLON

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression_opt             go to state 253
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 173

   88 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 207
    constant_expression        go to state 254
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 174

  112 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  113                    | FOR . ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 255


State 175

  110 iteration_statement: WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 256


State 176

   97 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 257


State 177

   98 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 258


State 178

  114 selection_statement_base: IF . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 259


State 179

   89 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 260


State 180

  111 iteration_statement: DO . statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 261
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 181

   96 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 262


State 182

    1 primary_expression: IDENTIFIER .
   87 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 263

    $default  reduce using rule 1 (primary_expression)


State 183

  121 statement: labeled_statement .

    $default  reduce using rule 121 (statement)


State 184

  122 statement: compound_statement .

    $default  reduce using rule 122 (statement)


State 185

  117 block_item_list: block_item .

    $default  reduce using rule 117 (block_item_list)


State 186

  123 statement: expression_statement .

    $default  reduce using rule 123 (statement)


State 187

  124 statement: selection_statement .

    $default  reduce using rule 124 (statement)


State 188

  126 statement: jump_statement .

    $default  reduce using rule 126 (statement)


State 189

  125 statement: iteration_statement .

    $default  reduce using rule 125 (statement)


State 190

   94 selection_statement: selection_statement_base .
   95                    | selection_statement_base . ELSE statement

    ELSE  shift, and go to state 264

    ELSE      [reduce using rule 94 (selection_statement)]
    $default  reduce using rule 94 (selection_statement)


State 191

   93 expression_statement: expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 265


State 192

  118 block_item_list: block_item_list . block_item
  119 block_item_list_opt: block_item_list .

    AUTO                  shift, and go to state 1
    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    BREAK                 shift, and go to state 171
    EXTERN                shift, and go to state 5
    RETURN                shift, and go to state 172
    VOID                  shift, and go to state 6
    CASE                  shift, and go to state 173
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    FOR                   shift, and go to state 174
    SIGNED                shift, and go to state 11
    WHILE                 shift, and go to state 175
    CONST                 shift, and go to state 12
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    STATIC                shift, and go to state 14
    _COMPLEX              shift, and go to state 15
    DEFAULT               shift, and go to state 179
    INLINE                shift, and go to state 16
    _IMAGINARY            shift, and go to state 17
    DO                    shift, and go to state 180
    INT                   shift, and go to state 18
    SWITCH                shift, and go to state 181
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    REGISTER              shift, and go to state 21
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    CURLY_BRACKET_CLOSE  reduce using rule 119 (block_item_list_opt)
    $default             reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    declaration_specifiers     go to state 54
    type_specifier             go to state 23
    enum_specifier             go to state 24
    function_specifier         go to state 25
    labeled_statement          go to state 183
    compound_statement         go to state 184
    block_item                 go to state 266
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 194
    type_qualifier             go to state 29
    storage_class_specifier    go to state 30
    declaration                go to state 195
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 193

   90 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 267


State 194

   92 block_item: statement .

    $default  reduce using rule 92 (block_item)


State 195

   91 block_item: declaration .

    $default  reduce using rule 91 (block_item)


State 196

  115 expression_opt: expression .
  171 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 217

    $default  reduce using rule 115 (expression_opt)


State 197

  141 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 141 (direct_declarator)


State 198

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier_list      go to state 49
    type_qualifier_list_opt  go to state 268
    type_qualifier           go to state 51


State 199

  142 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . assignment_expression_opt SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . MUL SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 269
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 74 (assignment_expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    assignment_expression_opt  go to state 270
    assignment_expression      go to state 271
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 200

  134 identifier_list: IDENTIFIER .

    $default  reduce using rule 134 (identifier_list)


State 201

  147 direct_declarator: direct_declarator ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE .

    $default  reduce using rule 147 (direct_declarator)


State 202

   79 parameter_declaration: declaration_specifiers . declarator
   80                      | declaration_specifiers .

    MUL  shift, and go to state 34

    IDENTIFIER          reduce using rule 151 (pointer_opt)
    ROUND_BRACKET_OPEN  reduce using rule 151 (pointer_opt)
    $default            reduce using rule 80 (parameter_declaration)

    declarator   go to state 272
    pointer      go to state 38
    pointer_opt  go to state 39


State 203

  145 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 273


State 204

  136 parameter_list: parameter_declaration .

    $default  reduce using rule 136 (parameter_list)


State 205

  135 identifier_list: identifier_list . COMMA IDENTIFIER
  146 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 274
    COMMA                shift, and go to state 275


State 206

   77 parameter_type_list: parameter_list .
   78                    | parameter_list . COMMA DOTS
  137 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 276

    $default  reduce using rule 77 (parameter_type_list)


State 207

   42 constant_expression: conditional_expression .

    $default  reduce using rule 42 (constant_expression)


State 208

   70 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 70 (enumerator)


State 209

   67 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 67 (enum_specifier)


State 210

  156 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 156 (enumerator_list)


State 211

  195 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE
  203 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 277


State 212

  159 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 159 (specifier_qualifier_list_opt)


State 213

   64 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 64 (specifier_qualifier_list)


State 214

  189 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression
  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 278
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression  go to state 84
    unary_operator      go to state 85
    cast_expression     go to state 279
    unary_expression    go to state 133
    postfix_expression  go to state 101
    constant            go to state 102


State 215

   65 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 65 (specifier_qualifier_list)


State 216

    4 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 4 (primary_expression)


State 217

  171 expression: expression COMMA . assignment_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    assignment_expression      go to state 280
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 218

   85 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 281


State 219

   86 designator: DOT IDENTIFIER .

    $default  reduce using rule 86 (designator)


State 220

  129 initializer_list: designation_opt initializer .

    $default  reduce using rule 129 (initializer_list)


State 221

   84 designation: designator_list ASSIGN .

    $default  reduce using rule 84 (designation)


State 222

  128 designator_list: designator_list designator .

    $default  reduce using rule 128 (designator_list)


State 223

  132 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 132 (initializer)


State 224

  130 initializer_list: initializer_list COMMA . designation_opt initializer
  133 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 122
    CURLY_BRACKET_CLOSE  shift, and go to state 282
    DOT                  shift, and go to state 123

    $default  reduce using rule 83 (designation_opt)

    designation_opt  go to state 283
    designation      go to state 125
    designator       go to state 126
    designator_list  go to state 127


State 225

  203 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 284


State 226

   16 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 16 (multiplicative_expression)


State 227

   17 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 17 (multiplicative_expression)


State 228

   18 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 18 (multiplicative_expression)


State 229

   20 shift_expression: shift_expression SHL additive_expression .
  186 additive_expression: additive_expression . ADD multiplicative_expression
  187                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 20 (shift_expression)


State 230

   21 shift_expression: shift_expression SHR additive_expression .
  186 additive_expression: additive_expression . ADD multiplicative_expression
  187                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 21 (shift_expression)


State 231

   23 equality_expression: equality_expression EQ relational_expression .
  181 relational_expression: relational_expression . BITSHL shift_expression
  182                      | relational_expression . BITSHR shift_expression
  183                      | relational_expression . LTE shift_expression
  184                      | relational_expression . GTE shift_expression

    BITSHL  shift, and go to state 147
    BITSHR  shift, and go to state 148
    LTE     shift, and go to state 149
    GTE     shift, and go to state 150

    $default  reduce using rule 23 (equality_expression)


State 232

   24 equality_expression: equality_expression NEQ relational_expression .
  181 relational_expression: relational_expression . BITSHL shift_expression
  182                      | relational_expression . BITSHR shift_expression
  183                      | relational_expression . LTE shift_expression
  184                      | relational_expression . GTE shift_expression

    BITSHL  shift, and go to state 147
    BITSHR  shift, and go to state 148
    LTE     shift, and go to state 149
    GTE     shift, and go to state 150

    $default  reduce using rule 24 (equality_expression)


State 233

   26 exclusive_OR_expression: exclusive_OR_expression BITXOR AND_expression .
  179 AND_expression: AND_expression . AMP equality_expression

    AMP  shift, and go to state 146

    $default  reduce using rule 26 (exclusive_OR_expression)


State 234

   28 logical_AND_expression: logical_AND_expression AND inclusive_OR_expression .
  177 inclusive_OR_expression: inclusive_OR_expression . BITOR exclusive_OR_expression

    BITOR  shift, and go to state 145

    $default  reduce using rule 28 (logical_AND_expression)


State 235

   28 logical_AND_expression: logical_AND_expression . AND inclusive_OR_expression
  175 logical_OR_expression: logical_OR_expression OR logical_AND_expression .

    AND  shift, and go to state 142

    $default  reduce using rule 175 (logical_OR_expression)


State 236

   30 conditional_expression: logical_OR_expression QUESTION expression . COLON conditional_expression
  171 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 285
    COMMA  shift, and go to state 217


State 237

   26 exclusive_OR_expression: exclusive_OR_expression . BITXOR AND_expression
  177 inclusive_OR_expression: inclusive_OR_expression BITOR exclusive_OR_expression .

    BITXOR  shift, and go to state 141

    $default  reduce using rule 177 (inclusive_OR_expression)


State 238

   23 equality_expression: equality_expression . EQ relational_expression
   24                    | equality_expression . NEQ relational_expression
  179 AND_expression: AND_expression AMP equality_expression .

    EQ   shift, and go to state 139
    NEQ  shift, and go to state 140

    $default  reduce using rule 179 (AND_expression)


State 239

   20 shift_expression: shift_expression . SHL additive_expression
   21                 | shift_expression . SHR additive_expression
  181 relational_expression: relational_expression BITSHL shift_expression .

    SHL  shift, and go to state 137
    SHR  shift, and go to state 138

    $default  reduce using rule 181 (relational_expression)


State 240

   20 shift_expression: shift_expression . SHL additive_expression
   21                 | shift_expression . SHR additive_expression
  182 relational_expression: relational_expression BITSHR shift_expression .

    SHL  shift, and go to state 137
    SHR  shift, and go to state 138

    $default  reduce using rule 182 (relational_expression)


State 241

   20 shift_expression: shift_expression . SHL additive_expression
   21                 | shift_expression . SHR additive_expression
  183 relational_expression: relational_expression LTE shift_expression .

    SHL  shift, and go to state 137
    SHR  shift, and go to state 138

    $default  reduce using rule 183 (relational_expression)


State 242

   20 shift_expression: shift_expression . SHL additive_expression
   21                 | shift_expression . SHR additive_expression
  184 relational_expression: relational_expression GTE shift_expression .

    SHL  shift, and go to state 137
    SHR  shift, and go to state 138

    $default  reduce using rule 184 (relational_expression)


State 243

   16 multiplicative_expression: multiplicative_expression . MUL cast_expression
   17                          | multiplicative_expression . DIV cast_expression
   18                          | multiplicative_expression . MODULO cast_expression
  186 additive_expression: additive_expression ADD multiplicative_expression .

    MUL     shift, and go to state 134
    DIV     shift, and go to state 135
    MODULO  shift, and go to state 136

    $default  reduce using rule 186 (additive_expression)


State 244

   16 multiplicative_expression: multiplicative_expression . MUL cast_expression
   17                          | multiplicative_expression . DIV cast_expression
   18                          | multiplicative_expression . MODULO cast_expression
  187 additive_expression: additive_expression SUB multiplicative_expression .

    MUL     shift, and go to state 134
    DIV     shift, and go to state 135
    MODULO  shift, and go to state 136

    $default  reduce using rule 187 (additive_expression)


State 245

  173 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 173 (assignment_expression)


State 246

  171 expression: expression . COMMA assignment_expression
  197 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 286
    COMMA                 shift, and go to state 217


State 247

  198 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 287


State 248

    5 argument_expression_list_opt: argument_expression_list .
    8 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 288

    $default  reduce using rule 5 (argument_expression_list_opt)


State 249

    7 argument_expression_list: assignment_expression .

    $default  reduce using rule 7 (argument_expression_list)


State 250

  199 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 199 (postfix_expression)


State 251

  200 postfix_expression: postfix_expression ACC IDENTIFIER .

    $default  reduce using rule 200 (postfix_expression)


State 252

   99 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 99 (jump_statement)


State 253

  100 jump_statement: RETURN expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 289


State 254

   88 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 290


State 255

  112 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  113                    | FOR ROUND_BRACKET_OPEN . declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    AUTO                  shift, and go to state 1
    ENUM                  shift, and go to state 2
    RESTRICT              shift, and go to state 3
    UNSIGNED              shift, and go to state 4
    EXTERN                shift, and go to state 5
    VOID                  shift, and go to state 6
    FLOAT                 shift, and go to state 7
    SHORT                 shift, and go to state 8
    VOLATILE              shift, and go to state 9
    CHAR                  shift, and go to state 10
    SIGNED                shift, and go to state 11
    CONST                 shift, and go to state 12
    SIZEOF                shift, and go to state 67
    _BOOL                 shift, and go to state 13
    STATIC                shift, and go to state 14
    _COMPLEX              shift, and go to state 15
    INLINE                shift, and go to state 16
    _IMAGINARY            shift, and go to state 17
    INT                   shift, and go to state 18
    DOUBLE                shift, and go to state 19
    LONG                  shift, and go to state 20
    REGISTER              shift, and go to state 21
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    declaration_specifiers     go to state 54
    type_specifier             go to state 23
    enum_specifier             go to state 24
    function_specifier         go to state 25
    expression_opt             go to state 291
    type_qualifier             go to state 29
    storage_class_specifier    go to state 30
    declaration                go to state 292
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 256

  110 iteration_statement: WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 293
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 257

   97 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 294


State 258

   98 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 98 (jump_statement)


State 259

  114 selection_statement_base: IF ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 295
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 260

   89 labeled_statement: DEFAULT COLON . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 296
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 261

  111 iteration_statement: DO statement . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 297


State 262

   96 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 298
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 263

   87 labeled_statement: IDENTIFIER COLON . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 299
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 264

   95 selection_statement: selection_statement_base ELSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 300
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 265

   93 expression_statement: expression_opt SEMICOLON .

    $default  reduce using rule 93 (expression_statement)


State 266

  118 block_item_list: block_item_list block_item .

    $default  reduce using rule 118 (block_item_list)


State 267

   90 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 90 (compound_statement)


State 268

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt . assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    assignment_expression      go to state 301
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 269

   10 unary_operator: MUL .
  144 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 302

    $default  reduce using rule 10 (unary_operator)


State 270

  142 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 303


State 271

   73 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 73 (assignment_expression_opt)


State 272

   79 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 79 (parameter_declaration)


State 273

  145 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 145 (direct_declarator)


State 274

  146 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 146 (direct_declarator)


State 275

  135 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 304


State 276

   78 parameter_type_list: parameter_list COMMA . DOTS
  137 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    ENUM        shift, and go to state 2
    RESTRICT    shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    EXTERN      shift, and go to state 5
    VOID        shift, and go to state 6
    FLOAT       shift, and go to state 7
    SHORT       shift, and go to state 8
    VOLATILE    shift, and go to state 9
    CHAR        shift, and go to state 10
    SIGNED      shift, and go to state 11
    CONST       shift, and go to state 12
    _BOOL       shift, and go to state 13
    STATIC      shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    INLINE      shift, and go to state 16
    _IMAGINARY  shift, and go to state 17
    INT         shift, and go to state 18
    DOUBLE      shift, and go to state 19
    LONG        shift, and go to state 20
    REGISTER    shift, and go to state 21
    DOTS        shift, and go to state 305

    declaration_specifiers   go to state 202
    type_specifier           go to state 23
    enum_specifier           go to state 24
    function_specifier       go to state 25
    parameter_declaration    go to state 306
    type_qualifier           go to state 29
    storage_class_specifier  go to state 30


State 277

  195 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .
  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 278

    $default  reduce using rule 195 (unary_expression)


State 278

  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 122
    DOT                  shift, and go to state 123

    $default  reduce using rule 83 (designation_opt)

    designation_opt   go to state 124
    designation       go to state 125
    designator        go to state 126
    designator_list   go to state 127
    initializer_list  go to state 307


State 279

  189 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 189 (cast_expression)


State 280

  171 expression: expression COMMA assignment_expression .

    $default  reduce using rule 171 (expression)


State 281

   85 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 85 (designator)


State 282

  133 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 133 (initializer)


State 283

  130 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 75
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    initializer                go to state 308
    assignment_expression      go to state 93
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 284

  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 278


State 285

   30 conditional_expression: logical_OR_expression QUESTION expression COLON . conditional_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 309
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 133
    postfix_expression         go to state 101
    constant                   go to state 102


State 286

  197 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 197 (postfix_expression)


State 287

  198 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 198 (postfix_expression)


State 288

    8 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    assignment_expression      go to state 310
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 289

  100 jump_statement: RETURN expression_opt SEMICOLON .

    $default  reduce using rule 100 (jump_statement)


State 290

   88 labeled_statement: CASE constant_expression COLON . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 311
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 291

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 312


State 292

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression_opt             go to state 313
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 293

  110 iteration_statement: WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  171 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 314
    COMMA                shift, and go to state 217


State 294

   97 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 97 (jump_statement)


State 295

  114 selection_statement_base: IF ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  171 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 315
    COMMA                shift, and go to state 217


State 296

   89 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 89 (labeled_statement)


State 297

  111 iteration_statement: DO statement WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 316


State 298

   96 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  171 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 317
    COMMA                shift, and go to state 217


State 299

   87 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 87 (labeled_statement)


State 300

   95 selection_statement: selection_statement_base ELSE statement .

    $default  reduce using rule 95 (selection_statement)


State 301

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 318


State 302

  144 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 144 (direct_declarator)


State 303

  142 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 142 (direct_declarator)


State 304

  135 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 135 (identifier_list)


State 305

   78 parameter_type_list: parameter_list COMMA DOTS .

    $default  reduce using rule 78 (parameter_type_list)


State 306

  137 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 137 (parameter_list)


State 307

  130 initializer_list: initializer_list . COMMA designation_opt initializer
  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  204                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 319
    COMMA                shift, and go to state 320


State 308

  130 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 130 (initializer_list)


State 309

   30 conditional_expression: logical_OR_expression QUESTION expression COLON conditional_expression .

    $default  reduce using rule 30 (conditional_expression)


State 310

    8 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 8 (argument_expression_list)


State 311

   88 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 88 (labeled_statement)


State 312

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression_opt             go to state 321
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 313

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 322


State 314

  110 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 323
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 315

  114 selection_statement_base: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 324
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 316

  111 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression                 go to state 325
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 317

   96 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 326
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 318

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 143 (direct_declarator)


State 319

  203 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 203 (postfix_expression)


State 320

  130 initializer_list: initializer_list COMMA . designation_opt initializer
  204 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 122
    CURLY_BRACKET_CLOSE  shift, and go to state 327
    DOT                  shift, and go to state 123

    $default  reduce using rule 83 (designation_opt)

    designation_opt  go to state 283
    designation      go to state 125
    designator       go to state 126
    designator_list  go to state 127


State 321

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 328


State 322

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression_opt             go to state 329
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 323

  110 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 110 (iteration_statement)


State 324

  114 selection_statement_base: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 114 (selection_statement_base)


State 325

  111 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON
  171 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 330
    COMMA                shift, and go to state 217


State 326

   96 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 96 (selection_statement)


State 327

  204 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 204 (postfix_expression)


State 328

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 67
    IDENTIFIER            shift, and go to state 68
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    expression_opt             go to state 331
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 329

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 332


State 330

  111 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 333


State 331

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 334


State 332

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 335
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 333

  111 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 111 (iteration_statement)


State 334

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 171
    RETURN                shift, and go to state 172
    CASE                  shift, and go to state 173
    FOR                   shift, and go to state 174
    WHILE                 shift, and go to state 175
    GOTO                  shift, and go to state 176
    SIZEOF                shift, and go to state 67
    CONTINUE              shift, and go to state 177
    IF                    shift, and go to state 178
    DEFAULT               shift, and go to state 179
    DO                    shift, and go to state 180
    SWITCH                shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 69
    FLOATING_CONSTANT     shift, and go to state 70
    ENUMERATION_CONSTANT  shift, and go to state 71
    CHARACTER_CONSTANT    shift, and go to state 72
    STRING_LITERAL        shift, and go to state 73
    ROUND_BRACKET_OPEN    shift, and go to state 74
    CURLY_BRACKET_OPEN    shift, and go to state 105
    INC                   shift, and go to state 76
    DEC                   shift, and go to state 77
    AMP                   shift, and go to state 78
    MUL                   shift, and go to state 79
    ADD                   shift, and go to state 80
    SUB                   shift, and go to state 81
    NEG                   shift, and go to state 82
    EXCLAIM               shift, and go to state 83

    $default  reduce using rule 116 (expression_opt)

    primary_expression         go to state 84
    unary_operator             go to state 85
    multiplicative_expression  go to state 86
    shift_expression           go to state 87
    equality_expression        go to state 88
    exclusive_OR_expression    go to state 89
    logical_AND_expression     go to state 90
    conditional_expression     go to state 91
    labeled_statement          go to state 183
    compound_statement         go to state 184
    expression_statement       go to state 186
    selection_statement        go to state 187
    jump_statement             go to state 188
    iteration_statement        go to state 189
    selection_statement_base   go to state 190
    expression_opt             go to state 191
    statement                  go to state 336
    expression                 go to state 196
    assignment_expression      go to state 121
    logical_OR_expression      go to state 94
    inclusive_OR_expression    go to state 95
    AND_expression             go to state 96
    relational_expression      go to state 97
    additive_expression        go to state 98
    cast_expression            go to state 99
    unary_expression           go to state 100
    postfix_expression         go to state 101
    constant                   go to state 102


State 335

  113 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 113 (iteration_statement)


State 336

  112 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 112 (iteration_statement)
